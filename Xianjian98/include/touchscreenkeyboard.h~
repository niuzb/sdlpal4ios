#ifndef _H_TOUCHSCREENKEYBOARD
#define _H_TOUCHSCREENKEYBOARD
#ifdef __cplusplus
extern "C" {
#endif


#include "SDL_video.h"
#include "SDL_opengles.h"

//#include "SDL_pixels_c.h"
//#include "SDL_rect_c.h"
//#include "SDL_yuv_sw_c.h"


#define MAX_BUTTONS 20
#define PKG_NAME tk_niuzb_quake3
#define JAVA_EXPORT_NAME2(name,package) Java_##package##_##name
#define JAVA_EXPORT_NAME1(name,package) JAVA_EXPORT_NAME2(name,package)
#define JAVA_EXPORT_NAME(name) JAVA_EXPORT_NAME1(name,PKG_NAME)
enum MOUSE_ACTION { MOUSE_DOWN = 0, MOUSE_UP=1, MOUSE_MOVE=2 };
enum { ARROW_LEFT = 1, ARROW_RIGHT = 2, ARROW_UP = 4, ARROW_DOWN = 8 };

typedef struct
{
    GLuint id;
    GLfloat w;
    GLfloat h;
} GLTexture_t;


 static inline int InsideRect(const SDL_Rect * r, int x, int y)
{
	return ( x >= r->x && x <= r->x + r->w ) && ( y >= r->y && y <= r->y + r->h );
}
extern int processTouchscreenKeyboard(int x, int y, int action, int pointerId);
extern int drawTouchscreenKeyboard();

extern void init_screen_key_size(int oritation, int width, int heigth);
extern void keybutton( unsigned char* charBuf, int len,int win_id);
    //set the button scan code end with 0
    //fire strafe gun jump
extern void keyboard_set_button_key(int num, ...);
#define LOGI(...) printf("%s\n", __VA_ARGS__)

#ifdef __cplusplus
}
#endif
#endif
